name: Ansible

"on":
  pull_request:
    branches: [main]
    paths:
      - "inventory/**/*"
  push:
    branches: [main]
    paths:
      - "inventory/**/*"

jobs:

  find-out-changed-inventories:
    name: Find out changed inventories
    runs-on: ubuntu-latest
    outputs:
      changed_directories: ${{ steps.set-output.outputs.changed_directories }}  # The `dirs` doesn't exist in the outputs of changed-files@v35 action.
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          dir_names: true
          dir_names_max_depth: 2  # This is optional. If not provided, full subdirectories' paths will be provided. Use it if you need to trim the output. See docs for details: https://github.com/tj-actions/changed-files/tree/main#inputs.
          files: inventory/**
          json: true
          quotepath: false

      - name: Set output in the matrix format
        id: set-output
        run: echo "changed_directories={\"dir\":${{ steps.changed-files.outputs.all_changed_files }}}" >> "$GITHUB_OUTPUT"

  run-ansible-on-changed-inventories:
    name: Ansible
    runs-on: ubuntu-latest
    if: ${{ needs.find-out-changed-inventories.outputs.changed_directories != '' }}  # Without it, the strategy parser will fail if the changed_directories is empty.
    strategy:
      matrix: ${{ fromJson(needs.find-out-changed-inventories.outputs.changed_directories) }}
    needs:
      - find-out-changed-inventories
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install YQ
        uses: dcarbone/install-yq-action@v1.1.1
        with:
          version: v4.40.5
          download-compressed: true

      - name: Download custom requirements (if any)
        run: |
          if [ -s collections/requirements.sh -a ! -x collections/requirements.sh ]; then
            chmod -c a+x collections/requirements.sh
          fi
          if [ -x collections/requirements.sh ]; then
            echo "Detected: collections"
            OLD_PWD="$(pwd)"
            cd collections/
            ./requirements.sh
            cd "${OLD_PWD}"
          fi
          if [ -s roles/requirements.sh -a ! -x roles/requirements.sh ]; then
            chmod -c a+x roles/requirements.sh
          fi
          if [ -x roles/requirements.sh ]; then
            echo "Detected: roles"
            OLD_PWD="$(pwd)"
            cd roles/
            ./requirements.sh
            cd "${OLD_PWD}"
          fi

      - name: Merge requirements files (if any)
        run: |
          if [ -s collections/requirements.yml ]; then
            cat collections/requirements.yml > collections.yml.tmp
            echo "Detected: collections"
          else
            touch collections.yml.tmp
          fi
          if [ -s roles/requirements.yml ]; then
            yq '{"roles": .}' roles/requirements.yml > roles.yml.tmp
            echo "Detected: roles"
          else
            touch roles.yml.tmp
          fi
          yq eval-all '. as $item ireduce ({}; . *+ $item)' collections.yml.tmp roles.yml.tmp > requirements.yml
          rm -f roles.yml.tmp collections.yml.tmp

      - name: Install Mozilla SOPS (except localhost)
        if: ${{ matrix.dir != 'inventory/localhost' }}
        uses: nhedger/setup-sops@v2

      - name: Run [check.yml] playbook on PR (except localhost)
        if: ${{ github.event_name == 'pull_request' && matrix.dir != 'inventory/localhost' }}
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: playbooks/check.yml
          requirements: requirements.yml
          options: |
            --inventory ${{ matrix.dir }}/inventory.yml

      - name: Run [deploy.yml] playbook on PUSH (except localhost)
        if: ${{ github.event_name == 'push' && matrix.dir != 'inventory/localhost' }}
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: playbooks/deploy.yml
          requirements: requirements.yml
          options: |
            --inventory ${{ matrix.dir }}/inventory.yml
